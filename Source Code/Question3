# Importing libraries and modules.
import pandas as pd
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn import metrics
from sklearn.cluster import KMeans
from sklearn.decomposition import PCA
import matplotlib.pyplot as plt
import seaborn as sns
import warnings

warnings.filterwarnings("ignore")
sns.set(style="white", color_codes=True)

dataset = pd.read_csv("CC.csv")
dataset = dataset.drop(['CUST_ID'], axis=1) # Dropping CUST_ID because it does not have any relationship with the other features.

dataset = dataset.fillna(dataset.mean())  # Replacing the values in the dataset with the mean.

x = dataset.iloc[:,[i for i in range(16)]]
y = dataset.iloc[:,-1]


scaler = StandardScaler()  # Scaling the data.
scaler.fit(x) # Fit on the training set only.


x_scaler = scaler.transform(x)
pca = PCA(2)  # Decreasing the columns for better accuracy.
x_pca = pca.fit_transform(x_scaler)


wcss = []
for i in range(1,11):
    kmeans = KMeans(n_clusters=i,init='k-means++',max_iter=300,n_init=10,random_state=0)
    kmeans.fit(x_pca)
    wcss.append(kmeans.inertia_)

# Plotting the graph for the Elbow Method.
plt.plot(range(1,11),wcss)
plt.title('The Elbow Method')
plt.xlabel('Number of Clusters')
plt.ylabel('Wcss')
plt.show()

df = pd.DataFrame(data=x_pca, columns=["x", "y"])
finaldf = pd.concat([df,dataset[['TENURE']]],axis=1)
sclusters = 5 # this is the k in kmeans
km = KMeans(n_clusters=sclusters)
km.fit(df)

# Plotting the graph for the clusters.
plt.scatter(df["x"], df["y"])
plt.scatter(km.cluster_centers_[:, 0], km.cluster_centers_[:, 1], s=300, c='red')
plt.show()
yscaledCluster_kmeans = km.predict(df)
scaledScore = metrics.silhouette_score(df, yscaledCluster_kmeans)
print(scaledScore)  # Printing the accuracy.
